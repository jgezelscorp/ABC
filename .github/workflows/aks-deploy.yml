name: AKS CI/CD Deploy

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  id-token: write
  actions: write
  deployments: write

jobs:
  validate-and-whatif:
    runs-on: ubuntu-24.04
    env:
      # Shared Azure CLI profile/cache & Bicep location used by BOTH container and host
      AZURE_CONFIG_DIR: ${{ github.workspace }}/.azcfg
      BICEP_VERSION: v0.37.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Make the shared config directory up-front on the HOST
      - name: Prepare shared AZ CLI profile dir (host)
        run: mkdir -p "$AZURE_CONFIG_DIR"

      # --- Login + install happen inside the azure/cli container and write into $GITHUB_WORKSPACE/.azcfg ---
      - name: OIDC login in container + Install Bicep (shared)
        uses: azure/cli@v2
        with:
          azcliversion: 2.76.0
          inlineScript: |
            set -euo pipefail
            mkdir -p "$AZURE_CONFIG_DIR"

            # Ensure az uses the bicep it manages under $AZURE_CONFIG_DIR/bin
            az config set bicep.use_binary_from_path=false

            # Install a modern Bicep (avoid old builds that break on newer OpenSSL stacks)
            az bicep install --version "${BICEP_VERSION}" --force
            az bicep version

            # --- OIDC: fetch GitHub ID token and exchange with Azure ---
            OIDC_TOKEN=$(curl -sS -H "Authorization: Bearer ${ACTIONS_ID_TOKEN_REQUEST_TOKEN}" \
              "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=api://AzureADTokenExchange" \
              | jq -r '.value')
            az login --service-principal \
              --username "${{ secrets.AZURE_CLIENT_ID }}" \
              --tenant   "${{ secrets.AZURE_TENANT_ID }}" \
              --federated-token "$OIDC_TOKEN"
            az account set --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
            az account show

      # --- HOST steps from here down, reusing the SAME AZURE_CONFIG_DIR ---

      # Make sure host has a bicep it can run (same shared location). This is fast if already present.
      - name: Ensure Bicep on host
        run: |
          az config set bicep.use_binary_from_path=false
          az bicep upgrade --version "$BICEP_VERSION"
          az bicep version

      # Use the Bicep binary directly to avoid any az init/config writes
      - name: Bicep build (host, direct binary)
        run: |
          "$AZURE_CONFIG_DIR/bin/bicep" build --file main.bicep

      - name: Resource group check
        id: rg
        run: |
          rg_exists=$(az group exists --name "${{ secrets.AKS_RG }}")
          echo "rg_exists=$rg_exists" >> "$GITHUB_OUTPUT"

      - name: What-If
        if: steps.rg.outputs.rg_exists == 'true'
        run: |
          if [ -f AVM/AKS/parameters.bicepparam ]; then
            PARAMETERS='@parameters.bicepparam'
          else
            PARAMETERS='@parameters.json'
          fi
          az deployment group what-if \
            --resource-group "${{ secrets.AKS_RG }}" \
            --template-file main.bicep \
            --parameters "$PARAMETERS" \
            --no-prompt

      - name: Validate (will create RG if missing)
        if: steps.rg.outputs.rg_exists != 'true'
        run: |
          az group create --name "${{ secrets.AKS_RG }}" --location "${{ secrets.AKS_LOCATION }}"
          if [ -f parameters.bicepparam ]; then
            PARAMETERS='@parameters.bicepparam'
          else
            PARAMETERS='@parameters.json'
          fi
          az deployment group validate \
            --resource-group "${{ secrets.AKS_RG }}" \
            --template-file main.bicep \
            --parameters "$PARAMETERS"

  deploy-on-merge:
    needs: validate-and-whatif
    runs-on: ubuntu-24.04
    if: >
      github.event_name == 'pull_request' &&
      github.event.action == 'closed' &&
      github.event.pull_request.merged == true
    env:
      AZURE_CONFIG_DIR: ${{ github.workspace }}/.azcfg
      BICEP_VERSION: v0.37.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare shared AZ CLI profile dir (host)
        run: mkdir -p "$AZURE_CONFIG_DIR"

      - name: OIDC login in container (shared)
        uses: azure/cli@v2
        with:
          azcliversion: 2.76.0
          inlineScript: |
            set -euo pipefail
            mkdir -p "$AZURE_CONFIG_DIR"
            az config set bicep.use_binary_from_path=false
            az bicep install --version "${BICEP_VERSION}" --force

            OIDC_TOKEN=$(curl -sS -H "Authorization: Bearer ${ACTIONS_ID_TOKEN_REQUEST_TOKEN}" \
              "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=api://AzureADTokenExchange" \
              | jq -r '.value')
            az login --service-principal \
              --username "${{ secrets.AZURE_CLIENT_ID }}" \
              --tenant   "${{ secrets.AZURE_TENANT_ID }}" \
              --federated-token "$OIDC_TOKEN"
            az account set --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      - name: Deploy AKS
        run: |
          if [ -f parameters.bicepparam ]; then
            PARAMETERS='@parameters.bicepparam'
          else
            PARAMETERS='@parameters.json'
          fi
          az deployment group create \
            --resource-group "${{ secrets.AKS_RG }}" \
            --template-file main.bicep \
            --parameters "$PARAMETERS" \
            --confirm-with-what-if
