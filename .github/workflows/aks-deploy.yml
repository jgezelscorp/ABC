name: AKS CI/CD Deploy

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  id-token: write           # required to request the OIDC token
  actions: write
  deployments: write

jobs:
  validate-and-whatif:
    # Use the explicit image to reduce surprises with runner updates
    runs-on: ubuntu-24.04
    env:
      # Use a writable, shared CLI config dir that both container & host can access
      AZURE_CONFIG_DIR: ${{ github.workspace }}/.azcfg
      BICEP_VERSION: v0.37.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Login & Bicep install happen inside the azure/cli container ---
      - name: OIDC login in container + Install Bicep (shared config)
        uses: azure/cli@v2
        with:
          azcliversion: 2.76.0
          inlineScript: |
            set -euo pipefail

            # Ensure shared config dir exists (this path is bind-mounted)
            mkdir -p "$AZURE_CONFIG_DIR"

            # Make az use the Bicep it manages in AZURE_CONFIG_DIR/bin
            az config set bicep.use_binary_from_path=false

            # Install a modern Bicep compatible with current base images
            az bicep install --version "${BICEP_VERSION}"
            az bicep version

            # --- OIDC: request a GitHub ID token and exchange it with Azure ---
            # GitHub exposes these env vars when permissions.id-token=write
            OIDC_TOKEN=$(curl -sS -H "Authorization: Bearer ${ACTIONS_ID_TOKEN_REQUEST_TOKEN}" \
              "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=api://AzureADTokenExchange" \
              | jq -r '.value')

            # Sign in to Azure with federated identity (no secret needed)
            az login --service-principal \
              --username "${{ secrets.AZURE_CLIENT_ID }}" \
              --tenant   "${{ secrets.AZURE_TENANT_ID }}" \
              --federated-token "$OIDC_TOKEN"

            az account set --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
            az account show

            # Optional: quick build inside the container (ensures Bicep is OK)
            az bicep build --file main.bicep

      # --- From here down, everything runs on the host runner using the same AZURE_CONFIG_DIR ---

      - name: Bicep build (host)
        run: |
          az bicep build --file main.bicep

      - name: Resource group check
        id: rg
        run: |
          rg_exists=$(az group exists --name "${{ secrets.AKS_RG }}")
          echo "rg_exists=$rg_exists" >> "$GITHUB_OUTPUT"

      - name: What-If
        if: steps.rg.outputs.rg_exists == 'true'
        run: |
          if [ -f AVM/AKS/parameters.bicepparam ]; then
            PARAMETERS='@parameters.bicepparam'
          else
            PARAMETERS='@parameters.json'
          fi
          az deployment group what-if \
            --resource-group "${{ secrets.AKS_RG }}" \
            --template-file main.bicep \
            --parameters "$PARAMETERS" \
            --no-prompt

      - name: Validate (will create RG if missing)
        if: steps.rg.outputs.rg_exists != 'true'
        run: |
          az group create --name "${{ secrets.AKS_RG }}" --location "${{ secrets.AKS_LOCATION }}"
          if [ -f parameters.bicepparam ]; then
            PARAMETERS='@parameters.bicepparam'
          else
            PARAMETERS='@parameters.json'
          fi
          az deployment group validate \
            --resource-group "${{ secrets.AKS_RG }}" \
            --template-file main.bicep \
            --parameters "$PARAMETERS"

  deploy-on-merge:
    needs: validate-and-whatif
    runs-on: ubuntu-24.04
    if: >
      github.event_name == 'pull_request' &&
      github.event.action == 'closed' &&
      github.event.pull_request.merged == true
    env:
      AZURE_CONFIG_DIR: ${{ github.workspace }}/.azcfg
      BICEP_VERSION: v0.37.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Do the same containerized OIDC login so the host can reuse the session
      - name: OIDC login in container (shared config)
        uses: azure/cli@v2
        with:
          azcliversion: 2.76.0
          inlineScript: |
            set -euo pipefail
            mkdir -p "$AZURE_CONFIG_DIR"
            az config set bicep.use_binary_from_path=false
            az bicep install --version "${BICEP_VERSION}" --force

            OIDC_TOKEN=$(curl -sS -H "Authorization: Bearer ${ACTIONS_ID_TOKEN_REQUEST_TOKEN}" \
              "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=api://AzureADTokenExchange" \
              | jq -r '.value')

            az login --service-principal \
              --username "${{ secrets.AZURE_CLIENT_ID }}" \
              --tenant   "${{ secrets.AZURE_TENANT_ID }}" \
              --federated-token "$OIDC_TOKEN"

            az account set --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      - name: Deploy AKS (host)
        run: |
          if [ -f parameters.bicepparam ]; then
            PARAMETERS='@parameters.bicepparam'
          else
            PARAMETERS='@parameters.json'
          fi
          az deployment group create \
            --resource-group "${{ secrets.AKS_RG }}" \
            --template-file main.bicep \
            --parameters "$PARAMETERS" \
            --confirm-with-what-if
